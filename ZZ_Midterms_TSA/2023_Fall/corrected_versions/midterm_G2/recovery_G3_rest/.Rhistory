ts_data <-
read.csv(file.choose()) %>%
mutate(
ym = yearmonth(start_timestamp)
) %>%
as_tsibble(index = ym) %>%
select(ym, value)
library(fpp3)
ts_data <-
read.csv(file.choose()) %>%
mutate(
ym = yearmonth(start_timestamp)
) %>%
as_tsibble(index = ym) %>%
select(ym, value)
ts_data
ts_data %>%
autoplot() +
scale_x_yearmonth(breaks = "4 years",
minor_breaks = "1 year")
log_data <- ts_data %>% mutate(log_T = log(value))
log_data %>% autoplot(log(value)) +
scale_x_yearmonth(breaks = "4 years",
minor_breaks = "1 year")
ts_data = ts_data %>% mutate(log_T = log(value))
ts_data = ts_data %>%
mutate(
`12-MA` = slider::slide_dbl(log_T, mean,
.before = 5, .after = 6, .complete = TRUE),
log_trend_class = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
ts_data
# Plot the computed trend
ts_data %>%
autoplot(log_T, colour = "gray") +
geom_line(aes(y = log_trend_class), colour = "#D55E00")
####
log_detrended <-
ts_data %>%
mutate(
detrended = value - log_trend_class,
)
log_detrended %>% autoplot(detrended)
ts_data = ts_data %>% mutate(log_T = log(value))
ts_data = ts_data %>%
mutate(
`12-MA` = slider::slide_dbl(log_T, mean,
.before = 5, .after = 6, .complete = TRUE),
log_trend_class = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
ts_data
# Plot the computed trend
ts_data %>%
autoplot(log_T, colour = "gray") +
geom_line(aes(y = log_trend_class), colour = "#D55E00")
####
ts_data
log_detrended <-
ts_data %>%
mutate(
detrended = value - log_trend_class,
)
log_detrended %>% autoplot(detrended)
ts_data %>%
ACF() %>%
autoplot()
log_detrended %>%
ACF() %>%
autoplot()
#STL DECOMPOSITION
stl_dcmp <- ts_data %>%
model(stl = STL(value)) %>%
components()
stl_dcmp %>%
autoplot()
#CLASSICAL DECOMPOSITION
class_dcmp = ts_data %>%
model(
class_dcmp = classical_decomposition(value)
) %>%
components()
class_dcmp %>%
autoplot()
stl_dcmp %>%
autoplot(season_year)
class_dcmp %>%
autoplot(seasonal)
all.equal(ts_data$log_trend_class, class_dcmp$trend)
ts_data = ts_data %>%
index_by(ym) %>%
mutate(
yq = yearquarter(yearmonth(ym)),
quarter = quarter(yearmonth(ym))
)
ts_quarterly = ts_data %>%
index_by(yq) %>%
summarise(
tail = tail(yq, na.rm = TRUE),
)
ts_quarterly
ts_quarterly
library(fpp3)
ts_data <-
read.csv(file.choose()) %>%
mutate(
ym = yearmonth(start_timestamp)
) %>%
as_tsibble(index = ym) %>%
select(ym, value)
ts_data
# YOUR CODE GOES HERE
ts_data %>%
autoplot() +
scale_x_yearmonth(breaks = "4 years",
minor_breaks = "1 year")
log_data <- ts_data %>%  mutate(log_T = log(value))
log_data %>%  autoplot(log(value)) +
scale_x_yearmonth(breaks = "4 years",
minor_breaks = "1 year")
# ALL THE CODE SHALL BE CONTAINED HERE
# YOUR CODE GOES HERE
ts_data = ts_data %>%
mutate(
`12-MA` = slider::slide_dbl(ts_data, mean,
.before = 5, .after = 6, .complete = TRUE),
log_trend_class = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
ts_data %>%
autoplot()
# ALL THE CODE SHALL BE CONTAINED HERE.
# YOUR CODE GOES HERE
ts_data <-
ts_data %>%
mutate(
log_detrended = ts_data - log_trend_class,
)
ts_data %>%
autoplot()
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
# YOUR CODE GOES HERE
log_data %>%
ACF(value, lag_max = 48) %>%
autoplot()
log_detrended %>%
ACF(value, lag_max = 48) %>%
autoplot()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
# YOUR CODE GOES HERE
stl_dcpm <-
ts_data %>%
model(
stl = STL(value)
) %>%
components()
stl_dcpm %>% autoplot()
class_dcmp <-
ts_data %>%
model(
classical = classical_decomposition(value)
) %>%
components()
class_dcmp %>% autoplot()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
# YOUR CODE GOES HERE
stl_dcpm %>%
ACF(season_year, lag_max = 48) %>%
autoplot()
stl_dcpm %>%
ACF(season_year, lag_max = 48) %>%
autoplot()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
# YOUR CODE GOES HERE
stl_dcpm <-
ts_data %>%
model(
stl = STL(value)
) %>%
components()
stl_dcpm %>% autoplot()
class_dcmp <-
ts_data %>%
model(
classical = classical_decomposition(value)
) %>%
components()
class_dcmp %>% autoplot()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
# YOUR CODE GOES HERE
stl_dcpm %>%
ACF(season_year, lag_max = 48) %>%
autoplot()
stl_dcpm %>%
ACF(season_year, lag_max = 48) %>%
autoplot()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
## YOUR CODE GOES HERE
ts_data_quarter <- ts_data %>% mutate(quarter=yearquarter(ym))
ts_quarter <- ts_data_quarter %>% index_by(quarter())
library(fpp3)
ts_data <-
read.csv(file.choose()) %>%
mutate(
ym = yearmonth(start_timestamp)
) %>%
as_tsibble(index = ym) %>%
select(ym, value)
ts_data
# YOUR CODE GOES HERE
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS.
# ALL THE CODE SHALL BE CONTAINED HERE
ts_data %>% autoplot()+ scale_x_yearmonth(
date_breaks = "4 years",
minor_breaks = "1 year")
ts_stl<- ts_data %>%
model(stl = STL(value))
components(ts_stl)
ts_data<- mutate(ts_data, log_ts_data =log(value))
ts_data
ts_data %>% autoplot(log_ts_data)+ scale_x_yearmonth(
date_breaks = "4 years",
minor_breaks = "1 year")
# YOUR CODE GOES HERE
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
manual_dcmp <- ts_data %>% mutate(
`log_trend_class` = slider::slide_dbl(log_ts_data, mean, .before=5, .after=6, .complete=TRUE),
`2xlog_trend_class` = slider::slide_dbl(`log_trend_class`, mean, .before=1, .after=0, .complete=TRUE)
)
manual_dcmp %>%  autoplot(log_ts_data, colour = "gray") +
geom_line(aes(y = `2xlog_trend_class`), colour = "violet") +
scale_x_yearmonth(date_breaks = "4 year",
minor_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90))
# YOUR CODE GOES HERE
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
detrended_class <-
manual_dcmp %>%
mutate(
log_detrended = log_ts_data - `2xlog_trend_class`,
)
detrended_class %>% autoplot(log_detrended)
# YOUR CODE GOES HERE
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
# Detrended
detrended_class %>%
ACF(log_detrended, lag_max = 48) %>%
autoplot()
# Log
ts_data %>%
select(log_ts_data) %>%
ACF(lag_max = 48) %>%
autoplot()
# YOUR CODE GOES HERE
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
stl_dcmp <-
ts_data %>%
model(stl = STL(value)) %>%
components()
stl_dcmp %>% autoplot()
class_dcmp<- ts_data %>% model(
classical = classical_decomposition(value, type = "additive")
) %>%
components()
class_dcmp %>% autoplot()
# YOUR CODE GOES HERE
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
stl_dcmp %>% autoplot(season_year)
class_dcmp %>% autoplot(seasonal)
## YOUR CODE GOES HERE
## DO NOT ADD ADDITIONAL CODE SNIPPETS
TC<-manual_dcmp$log_trend_class
CT<-class_dcmp$trend
TC==CT
## YOUR CODE GOES HERE
## DO NOT ADD ADDITIONAL CODE SNIPPETS
ts_data_quarter <- ts_data %>% mutate(quarter=yearquarter(ym))
ts_quarterly<- ts_data_quarter %>% index_by(quarter)
ts_quarterly
ts_data <-
read.csv(file.choose()) %>%
mutate(
ym = yearmonth(start_timestamp)
) %>%
as_tsibble(index = ym) %>%
select(ym, value)
ts_data
# YOUR CODE GOES HERE
ts_data %>% autoplot()+ scale_x_yearmonth(date_breaks = "4 years",minor_breaks = "1 year")
ts_data = mutate(ts_data, log_ts_data =log(value))
ts_data %>% autoplot(log_ts_data)+ scale_x_yearmonth(date_breaks = "4 years",minor_breaks = "1 year")
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS.
# ALL THE CODE SHALL BE CONTAINED HERE
# YOUR CODE GOES HERE
manual_decompos= ts_data %>% mutate(
`log_trend_class` = slider::slide_dbl(log_ts_data, mean, .before=5, .after=6, .complete=TRUE),
`2xlog_trend_class` = slider::slide_dbl(`log_trend_class`, mean, .before=1, .after=0, .complete=TRUE)
)
manual_decompos %>%  autoplot(log_ts_data, colour = "red") + geom_line(aes(y = `2xlog_trend_class`), colour = "green") + scale_x_yearmonth(date_breaks = "4 year",minor_breaks = "1 year") + theme(axis.text.x = element_text(angle = 90))
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
# YOUR CODE GOES HERE
dtr = manual_decompos %>% mutate( log_detrended = log_ts_data - `2xlog_trend_class`,)
dtr %>% autoplot(log_detrended)
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
# YOUR CODE GOES HERE
dtr %>% ACF(log_detrended, lag_max = 48) %>% autoplot()
ts_data %>% select(log_ts_data) %>% ACF(lag_max = 48) %>% autoplot()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
# YOUR CODE GOES HERE
stl_dcmp = ts_data %>% model(stl = STL(value)) %>% components()
class_dcmp = ts_data %>% model(classical = classical_decomposition(value, type = "additive")) %>% components()
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
class_dcmp
stl_dcmp
# YOUR CODE GOES HERE
stl_dcmp %>% autoplot(season_year)
class_dcmp %>% autoplot(seasonal)
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
## YOUR CODE GOES HERE
trendy = manual_decompos$log_trend_class
classicaly = class_dcmp$trend
trendy == classicaly
## DO NOT ADD ADDITIONAL CODE SNIPPETS
library(fpp3)
ts_data <-
read.csv(file.choose()) %>%
mutate(
ym = yearmonth(start_timestamp)
) %>%
as_tsibble(index = ym) %>%
select(ym, value)
ts_data
# YOUR CODE GOES HERE
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS.
# ALL THE CODE SHALL BE CONTAINED HERE
ts_data %>%
autoplot() +
scale_x_yearmonth(date_breaks = "4 year",
minor_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90))
ts_data <- ts_data %>% mutate(log_T = log(value))
ts_data %>% autoplot(log(value))
# YOUR CODE GOES HERE
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
ts_data <- ts_data %>% mutate(log_T = log(value))
log_trend_class <-
ts_data %>%
mutate(
MA_7 = slider::slide_dbl(value, mean,
.before = 3, .after = 3, .complete = TRUE)
) %>%
select(value, MA_7)
log_trend_class %>%
autoplot() +
scale_x_yearmonth(date_breaks = "4 year",
minor_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90))
# YOUR CODE GOES HERE
# DON NOT CREATE ANY ADDITIONAL CODE SNIPPETS
# ALL THE CODE SHALL BE CONTAINED HERE.
log_detrended <-
log_trend_class %>%
mutate(
detrended_class = value - MA_7,)
log_detrended %>%
autoplot(detrended_class) +
scale_x_yearmonth(date_breaks = "4 year", minor_breaks = "1 year") +
theme(axis.text.x = element_text(angle = 90))
# YOUR CODE GOES HERE
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
log_trend_class %>%
ACF() %>%
autoplot()
log_detrended %>%
ACF()%>%
autoplot()
# YOUR CODE GOES HERE
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
stl_dcmp <-
ts_data %>%
model(stl = STL(value)) %>%
components()
stl_dcmp
class_dcmp <-
ts_data %>%
model(
classical = classical_decomposition(value)
) %>%
components()
class_dcmp
# YOUR CODE GOES HERE
# DO NOT CREATE ADDITIONAL CODE SNIPPETS
class_dcmp%>% autoplot(seasonal)
stl_dcmp%>% autoplot(season_year)
## YOUR CODE GOES HERE
## DO NOT ADD ADDITIONAL CODE SNIPPETS
class_dcmp <-
ts_data %>%
model(
classical = classical_decomposition(value)
) %>%
components()
all.equal(class_dcmp$value, (class_dcmp$trend +
class_dcmp$seasonal +
class_dcmp$random))
