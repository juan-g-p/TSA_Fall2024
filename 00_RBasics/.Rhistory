library(babynames)
library(nycflights13)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(patchwork)
library(fpp3)
aus_exports <-
global_economy %>%
filter(Country == "Australia") %>%
# Generate the moving average
mutate(
#The slider function applies a function to "sliding" time windows.
#In this case it is a 7-MA because we are moving from j=-3 (before = 3)
# to j=+3 (after = 3).
`7-MA` = slider::slide_dbl(Exports, mean,
#.complete = TRUE -> function evaluated only on full windows
# This means that the MA will not be computed for the first
# and last three points of the time series
.before = 3, .after = 3, .complete = TRUE)
) %>%
select(Country, Code, Year, Exports, `7-MA`)
aus_exports
round(mean(aus_exports$Exports[1:7]), 4) == round(aus_exports$`7-MA`[[4]], 4)
aus_exports %>%
autoplot(Exports) +
geom_line(aes(y = `7-MA`), colour = "#D55E00") +
labs(y = "% of GDP",
title = "Total Australian exports")
aus_exports <- global_economy %>% filter(Country=='Australia')
# Create the different Moving Averages of order i.
# Note that i is always uneven
for (i in seq(3, 13, by = 2)){
col_name <- paste0(as.character(i), "-MA")
width = (i-1)/2 # Number of points to be left to the left an to the right
aus_exports[[col_name]] = slider::slide_dbl(aus_exports$Exports, mean,
#.complete = TRUE -> function evaluated only on full windows
.before = width, .after = width, .complete = TRUE)
}
aus_exports <- aus_exports %>%
select(Exports, `3-MA`, `5-MA`, `7-MA`, `9-MA`, `11-MA`, `13-MA`)
aus_exports
# Do not spend too much time figuring out this code, focus on the output.
plotlist <- list()
n_graph <- 1
for (i in seq(3, 13, by = 2)){
col_name <- paste0(as.character(i), "-MA")
col_name = sym(col_name)
plt <- aus_exports %>%
autoplot(Exports) +
#Lo pod√≠amos sustituir por aes_string!!!
geom_line(aes(y = !!col_name), colour = "#D55E00") +
labs(y = "% of GDP",
title = paste(as.character(i), "-MA"))
plotlist[[n_graph]] <- plt
n_graph = n_graph + 1
}
plotlist[[1]] + plotlist[[2]] + plotlist[[3]] + plotlist[[4]] +
plotlist[[5]] + plotlist[[6]]
# Filter dataset
beer <- aus_production %>%
filter(year(Quarter) >= 1992) %>%
select(Quarter, Beer)
beer <-
beer %>%
mutate(
# Unbalanced window for the first 4-MA: 1 point to the left, two
# points to the right
`4-MA` = slider::slide_dbl(Beer, mean,
.before = 1, .after = 2, .complete = TRUE),
# Subsequent two MA to make the overall window balanced
`2x4-MA` = slider::slide_dbl(`4-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
beer %>% select(Quarter, Beer, `4-MA`, `2x4-MA`) %>% head(5)
beer %>% select(Quarter, Beer, `4-MA`, `2x4-MA`) %>% tail(5)
beer %>%
autoplot(Beer) +
geom_line(aes(y = `2x4-MA`), colour = "#D55E00") +
labs(y = "Production of beer (megalitres)",
title = "Production of beer in Australia starting on 1992")
# Filter the series and select relevant columns
us_retail_employment <-
us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
# Compute moving averages
us_retail_employment_ma <- us_retail_employment %>%
mutate(
`12-MA` = slider::slide_dbl(Employed, mean,
.before = 5, .after = 6, .complete = TRUE),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
# Plot
us_retail_employment_ma %>%
autoplot(Employed, colour = "gray") +
geom_line(aes(y = `2x12-MA`), colour = "#D55E00") +
labs(y = "Persons (thousands)",
title = "Total employment in US retail")
q_elec <-
vic_elec %>%
index_by(quarter = yearquarter(Time)) %>%
summarise(
q_demand = mean(Demand)
)
q_elec
